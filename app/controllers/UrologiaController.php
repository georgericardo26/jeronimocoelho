<?php
/**
 * Created by PhpStorm.
 * User: georgericardo
 * Date: 25/06/19
 * Time: 09:02
 */
use ControllerBase\ControllerBase;
use Phalcon\Mvc\View;
use Phalcon\Paginator\Factory;
use Phalcon\Paginator\Adapter\Model as PaginatorModel;

class UrologiaController extends ControllerBase
{

    private $paginator;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->view->setVar("admin_user", $this->session->get('admin'));

    }

    public function indexAction()
    {
        $this->dispatcher->forward(
            [
                'controller' => 'urologia',
                'action'     => 'show'
            ]
        );
    }

    public function showAction($current_page = null)
    {
        $this->view->setRenderLevel(View::LEVEL_LAYOUT);
        $this->view->setLayout("/urologia/urologia-pagination");

        $urol = $this->modelsManager->createQuery(
            "SELECT * FROM urologia left join categorias on urologia.id_categoria = categorias.id"
        );
        $urol = $urol->execute();

        $paginator = new PaginatorModel(
            [
                'data'  => $urol,
                'limit' => 10,
                'page'  => ($current_page == null) ? 1 : $current_page,
            ]
        );

        $page = $paginator->getPaginate();
        $this->view->setVars(["urol" => $page]);

    }

    public function pageAction($current_page = null)
    {

        $this->view->setRenderLevel(View::LEVEL_LAYOUT);
        $this->view->setLayout("/urologia/urologia-pagination");
        $urol = $this->modelsManager->createQuery(
            "SELECT * FROM urologia left join categorias on urologia.id_categoria = categorias.id"
        );
        $urol = $urol->execute();

        $paginator = new PaginatorModel(
            [
                'data'  => $urol,
                'limit' => 10,
                'page'  => ($current_page == null) ? 1 : $current_page,
            ]
        );

        $page = $paginator->getPaginate();
        $this->view->setVars(["urol" => $page]);

    }

    public function likeAction()
    {


    }

    public function postAction($id)
    {

        $this->view->setRenderLevel(View::LEVEL_LAYOUT);
        $this->view->setLayout("/urologia/post/post-show");

        $urol = $this->modelsManager->createBuilder()
            ->columns("*")
            ->from("Urologia")
            ->join("Categorias")
            ->join("Galeria")
            ->where("Urologia.id = {$id}")
            ->limit("1")
            ->getQuery()
            ->execute();

        $last =  Urologia::find([
            "columns" => "id"
        ])->getLast();

        $first = Urologia::find([
            "columns" => "id"
        ])->getFirst();

        $post_id = (int)$urol[0]->urologia->id;
        $last = (int)$last->id;
        $first = (int)$first->id;
        $next = ($post_id >= $last) ? $first : ($post_id + 1);
        $previous = ($post_id <= $first) ? $first : ($post_id - 1);

        $this->view->setVars(["post" => $urol,
            "next" => $next,
            "previous" => $previous]);

    }

    public function postpageAction($post_id = null)
    {

        $this->view->setRenderLevel(View::LEVEL_LAYOUT);
        $this->view->setLayout("/urologia/post/post-show");

        //$max = $this->modelsManager->createQuery("SELECT COUNT ('id') FROM Blog)");
        $post = $this->modelsManager->createBuilder()
            ->columns('*')
            ->from('Urologia')
            ->join("Categorias")
            ->join("Galeria")
            ->where("Urologia.id = {$post_id}")
            ->limit("1")
            ->getQuery()
            ->execute();

        $last =  Urologia::find([
            "columns" => "id"
        ])->getLast();

        $first = Urologia::find([
            "columns" => "id"
        ])->getFirst();

        $post_id = (int)$post[0]->urologia->id;
        $last = (int)$last->id;
        $first = (int)$first->id;
        $next = ($post_id >= $last) ? $first : ($post_id + 1);
        $previous = ($post_id <= $first) ? $first : ($post_id - 1);

        $this->view->setVars(["post" => $post,
            "next" => $next,
            "previous" => $previous]);

    }

    public function searchAction()
    {

    }



}